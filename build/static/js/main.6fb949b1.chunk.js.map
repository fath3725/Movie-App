{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","API.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","props","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","button","Button","callback","onClick","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","console","log","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fb949b1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\r\n\r\nconst Header = () => (\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <LogoImg src = { RMDBLogo} alt='rmdb-logo' />\r\n            </Link>\r\n            <TMDBLogoImg src = { TMDBLogo } alt='tmdb-logo' />\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: ${(props) =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), var(--darkGrey)`};\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n\n  h1 {\n    font-size: var(--fontSuperBig);\n\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  p {\n    font-size: var(--fontMed);\n  \n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;\n","import React from 'react';\r\n//styles\r\nimport { Wrapper, Content, Text } from './HeroImage.styles';\r\nimport PropTypes from 'prop-types';\r\nconst HeroImage = ({image, title, text}) =>(\r\n    <Wrapper image = {image}>\r\n        <Content>\r\n            <Text>\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nHeroImage.propTypes={\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string\r\n};\r\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n\n  h1 {\n    color: var(--medGrey);\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;\n","import React from 'react';\r\n//styles\r\nimport { Wrapper, Content } from './Grid.styles';\r\nimport PropTypes from 'prop-types';\r\nconst Grid =({ header, children}) => (\r\n<Wrapper>\r\n    <h1>{header}</h1>\r\n    <Content>{children}</Content>\r\n</Wrapper>\r\n);\r\n\r\nGrid.propTypes ={\r\n    header: PropTypes.string\r\n};\r\n\r\nexport default Grid;","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateMovieThumb 0.5s;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  @keyframes animateMovieThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n//styles\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable}) => (\r\n    <div>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n                <Image src={image} alt='movie-thumb' />\r\n            </Link>\r\n        ) :(\r\n            <Image src={image} alt='movie-thumb' />\r\n        )}     \r\n    </div>\r\n);\r\n\r\nThumb.propTypes ={\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    clickable: PropTypes.bool\r\n};\r\nexport default Thumb;","import { Spinner } from './Spinner.styles';\r\n\r\nexport default Spinner;","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey); \n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n\n  input {\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Image\r\nimport searchIcon from '../../images/search-icon.svg';\r\n// Styles\r\nimport { Wrapper, Content } from './SearchBar.styles';\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n  const [state, setState] = useState('');\r\n  const initial = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (initial.current) {\r\n      initial.current = false;\r\n      return;\r\n    }\r\n\r\n    const timer = setTimeout(() => {\r\n      setSearchTerm(state);\r\n    }, 500)\r\n\r\n    return () => clearTimeout(timer)\r\n  },[setSearchTerm, state])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <img src={searchIcon} alt='search-icon' />\r\n        <input\r\n          type='text'\r\n          placeholder='Search Movie'\r\n          onChange={event => setState(event.currentTarget.value)}\r\n          value={state}\r\n        />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes ={\r\n  callback: PropTypes.func\r\n};\r\nexport default SearchBar;","\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//styles\r\nimport { Wrapper } from './Button.styles';\r\n\r\nconst Button = ({ text, callback}) => (\r\n    <Wrapper type='button' onClick={callback}>\r\n        {text}\r\n    </Wrapper>\r\n);\r\n\r\nButton.propTypes ={\r\n    text: PropTypes.string,\r\n    callback: PropTypes.func\r\n};\r\nexport default Button;","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState &&  JSON.parse(sessionState);\n};","import { useState, useEffect, useRef } from 'react';\r\n//API\r\nimport API from '../API';\r\n//heleprs\r\nimport { isPersistedState } from '../helpers';\r\n\r\nconst initialState = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0\r\n};\r\n\r\nexport const useHomeFetch = () =>{ \r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [state, setState] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n\r\n  console.log(searchTerm);\r\n  const fetchMovies = async (page, searchTerm = '' ) => {\r\n    try {\r\n      setError(false);\r\n      setLoading(true);\r\n\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n     \r\n      setState(prev => ({\r\n        ...movies,\r\n        results:\r\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n      }));\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Initial and search\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      const sessionState = isPersistedState('homeState');\r\n\r\n      if ( sessionState){\r\n        setState(sessionState);\r\n        return;\r\n      }\r\n    }\r\n    setState(initialState);\r\n    fetchMovies(1, searchTerm);\r\n  }, [searchTerm]);\r\n\r\n  //Load More\r\n  useEffect(()=> {\r\n    if(!isLoadingMore) return;\r\n\r\n    fetchMovies(state.page + 1, searchTerm);\r\n    setIsLoadingMore(false);\r\n  },[isLoadingMore, searchTerm, state.page])\r\n\r\n  //write session storage\r\n  useEffect(() =>{\r\n    if (!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state)); \r\n  }, [searchTerm, state]);\r\n\r\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore};\r\n};","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react';\r\n// API\r\nimport API from '../API';\r\n// Config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\r\n// Components\r\nimport HeroImage from './HeroImage';\r\nimport Grid from './Grid';\r\nimport Thumb from './Thumb';\r\nimport Spinner from './Spinner';\r\nimport SearchBar from './SearchBar';\r\nimport Button from './Button';\r\n\r\n// Hook\r\nimport { useHomeFetch } from '../hooks/useHomeFetch';\r\n// Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Home = () => {\r\n  const{ \r\n    state, \r\n    loading, \r\n    error, \r\n    searchTerm, \r\n    setSearchTerm , \r\n    setIsLoadingMore\r\n  } = useHomeFetch();\r\n\r\n  console.log(state);\r\n\r\n  if (error) return <div> Something went wrong...</div>\r\n\r\n  return (\r\n    <> \r\n      {state.results[0] ? (\r\n      <HeroImage \r\n      image = {`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n      title = {state.results[0].original_title}\r\n      text = {state.results[0].overview}\r\n      />\r\n      ) : null}\r\n      <SearchBar setSearchTerm = {setSearchTerm} />\r\n      <Grid header = {searchTerm ? 'Search Result' :'Popular Movies'}>\r\n        {state.results.map(movie => (\r\n          <Thumb\r\n          key ={movie.id}\r\n          clickable\r\n          image={\r\n            movie.poster_path \r\n            ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n            :NoImage\r\n          }\r\n          movieId = {movie.id}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {state.page < state.total_pages && !loading  && (\r\n        <Button text='Load More' callback={()=> setIsLoadingMore(true)}/>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 70px;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  padding: 0 20px;\n\n  span {\n    font-size: 1.2rem;\n    color: var(--white);\n    padding-right: 10px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 16px;\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//styles\r\nimport { Wrapper, Content } from './BreadCrumb.styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BreadCrumb = ({ movieTitle }) => (\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to ='/'>\r\n                <span>Home</span>\r\n            </Link>\r\n            <span> |</span>\r\n            <span> {movieTitle}</span>\r\n        </Content>    \r\n    </Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n    movieTitle: PropTypes.string\r\n};\r\n\r\nexport default BreadCrumb;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const Wrapper = styled.div`\n  background: ${(props) =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieinfo 1s;\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: 1280px;\n\n  margin: 0 auto;\n  background: rgb(0, 0, 0, 0.7);\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n","import react from \"react\";\r\nimport PropTypes from 'prop-types';\r\n//Components\r\nimport Thumb from '../Thumb';\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n//image\r\nimport NoImage from '../../images/no_image.jpg';\r\n//styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\r\n\r\nconst MovieInfo =({ movie }) => (\r\n\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n        <Content>\r\n            <Thumb\r\n            image={\r\n                movie.poster_path\r\n                ?`${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            clickable={false}/>\r\n            <Text>\r\n                <h1>{movie.title}</h1>\r\n                <h3>PLOT</h3>\r\n                <p>{movie.overview}</p>\r\n\r\n                <div className=\"rating-directors\">\r\n                    <div>\r\n                        <h3>RATING</h3>\r\n                        <div className=\"score\">{movie.vote_average}</div>\r\n                    </div>\r\n                    <div className=\"director\">\r\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n                        {movie.directors.map(director =>(\r\n                            <p key={director.credit_id}>{director.name}</p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nMovieInfo.propTypes ={\r\n    movie: PropTypes.object\r\n};\r\nexport default MovieInfo;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n\n    :first-child {\n      margin-left: 0;\n    }\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n\n    .column {\n      margin: 20px 0;\n    }\n  }\n`;\n","import React from 'react';\r\n//helpers\r\nimport PropTypes from 'prop-types';\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n//styles\r\nimport { Wrapper, Content } from './MovieInfoBar.styles';\r\n\r\nconst MovieInfoBar=({ time, budget, revenue }) => (\r\n    <Wrapper>\r\n        <Content>\r\n            <div className=\"column\">\r\n                <p>Running time:{calcTime(time)}</p>   \r\n            </div>\r\n            <div className=\"column\">\r\n                <p>Budget:{convertMoney(budget)}</p>   \r\n            </div>\r\n            <div className=\"column\">\r\n                <p>Revenue:{convertMoney(revenue)}</p>   \r\n            </div>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nMovieInfoBar.propTypes ={\r\n    time: PropTypes.number,\r\n    budget: PropTypes.number,\r\n    revenue: PropTypes.number\r\n};\r\n\r\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  h3 {\n    margin: 10px 0 0 0;\n  }\n\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 15px;\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Wrapper, Image } from \"./Actor.styles.js\";\r\n\r\nconst Actor = ({ name, character, imageUrl }) => (\r\n    <Wrapper>\r\n        <Image src={imageUrl} alt='actor-thumb' />\r\n        <h3>{name}</h3>\r\n        <p>{character}</p>\r\n    </Wrapper>\r\n);\r\n\r\nActor.propTypes = {\r\n    name: PropTypes.string,\r\n    character: PropTypes.string,\r\n    imageUrl: PropTypes.string,\r\n}\r\n\r\nexport default Actor;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n//components\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport BreadCrumb from './BreadCrumb';\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from './Actor';\r\n//Hook\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\n//Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Movie = () => {\r\n    const { movieId } = useParams();\r\n\r\n    const { state: movie, loading, error} = useMovieFetch(movieId);\r\n    \r\n    if (loading) return <Spinner />;\r\n    if (error) return <div>Something went wrong...</div>;\r\n    \r\n    return(\r\n        <>\r\n            <BreadCrumb movieTitle={movie.original_title} />\r\n            <MovieInfo movie={movie}/>\r\n            <MovieInfoBar \r\n             time={movie.runtime} \r\n             budget={movie.budget} \r\n             revenue={movie.revenue} \r\n             />\r\n             <Grid header=\"Actors\">\r\n                 {movie.actors.map(actor =>(\r\n                     <Actor\r\n                     key={actor.credit_id}\r\n                     name ={ actor.name}\r\n                     character={actor.character}\r\n                     imageUrl={\r\n                         actor.profile_path\r\n                         ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                         : NoImage\r\n                     }\r\n                     />\r\n                     ))}\r\n             </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Movie;  ","import { useState, useEffect } from \"react\";\r\nimport API from '../API';\r\n//helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = movieId =>{\r\n    const[state,setState]= useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const[error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async() =>{\r\n            try {\r\n                setLoading(true);\r\n                setError(false);\r\n\r\n                const movie = await API.fetchMovie(movieId);\r\n                const credits = await API.fetchCredits(movieId);\r\n                //get drirectors onlu\r\n                const directors = credits.crew.filter(\r\n                    member => member.job ==='Director'\r\n                );\r\n\r\n                setState({\r\n                    ...movie,\r\n                    actors: credits.cast,\r\n                    directors\r\n                });\r\n\r\n                setLoading(false);\r\n            }catch(error){\r\n                setError(true);\r\n            }\r\n        };\r\n\r\n        const sessionState = isPersistedState(movieId);\r\n\r\n        if(sessionState){\r\n            setState(sessionState);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        fetchMovie();\r\n    },[movieId]);\r\n\r\n    //write to session storage\r\n    useEffect(() => {\r\n        sessionStorage.setItem(movieId, JSON.stringify(state));\r\n    }, [movieId, state]);\r\n\r\n    return { state, loading, error};\r\n};","import React from 'react';\r\n\r\nconst NotFound = () => <div>Not Found</div>;\r\n\r\nexport default NotFound; ","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px; \n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535; \n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;  \n  }\n\n  body {  \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","import React from 'react';\n//routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n//components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n\n//styles\nimport { GlobalStyle } from './GlobalStyle';\n\n\nconst App =()=> (\n  <Router>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/:movieId' element = {<Movie />} />\n        <Route path='/*' element={<NotFound />} />\n      </Routes>\n      <GlobalStyle />\n    </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}